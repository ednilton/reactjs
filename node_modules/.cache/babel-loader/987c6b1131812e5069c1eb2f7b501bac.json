{"ast":null,"code":"var _jsxFileName = \"/home/ednilton/Dev/devpleno/react-curso/01-contador-voltas/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport MostraVoltas from './MostraVoltas';\n\nconst MostraTempo = props => {\n  const tempo = props.tempo;\n  const minutos = Math.round(tempo / 60);\n  const segundos = tempo % 60;\n  const minutosStr = minutos < 10 ? '0' + minutos : minutos;\n  const segundosStr = segundos < 10 ? '0' + segundos : segundos;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, `${minutosStr}:${segundosStr}`, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), \"Tempo m\\xE9dio por volta\");\n};\n\nconst Button = props => React.createElement(\"button\", {\n  onClick: props.onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, props.text);\n\nfunction App() {\n  const [numVoltas, setNumVoltas] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [tempo, setTempo] = useState(0);\n  console.log('toggle');\n  useEffect(() => {\n    let timer = null;\n\n    if (running) {\n      setInterval(() => {\n        setTempo(old => old + 1);\n      }, 1000);\n    }\n\n    return () => {\n      if (timer) {\n        // valor que é convertido para verdadeiro\n        clearInterval(timer);\n      }\n    };\n  }, [running]);\n\n  const toggleRunning = () => {\n    setRunning(!running);\n  };\n\n  const increment = () => {\n    setNumVoltas(numVoltas + 1);\n  };\n\n  const decrement = () => {\n    setNumVoltas(numVoltas - 1);\n  };\n\n  const reset = () => {\n    setNumVoltas(0);\n    setTempo(0);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(MostraVoltas, {\n    voltas: numVoltas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Button, {\n    text: \"+\",\n    onClick: increment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    text: \"-\",\n    onClick: decrement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), numVoltas > 0 && React.createElement(MostraTempo, {\n    tempo: tempo / numVoltas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: toggleRunning,\n    text: \"Iniciar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: reset,\n    text: \"Reiniciar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ednilton/Dev/devpleno/react-curso/01-contador-voltas/src/App.js"],"names":["React","useState","useEffect","MostraVoltas","MostraTempo","props","tempo","minutos","Math","round","segundos","minutosStr","segundosStr","Button","onClick","text","App","numVoltas","setNumVoltas","running","setRunning","setTempo","console","log","timer","setInterval","old","clearInterval","toggleRunning","increment","decrement","reset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MostraVoltas from './MostraVoltas'\n\nconst MostraTempo = (props) => {\n\n  const tempo = props.tempo\n  const minutos = Math.round(tempo / 60)\n  const segundos = tempo % 60\n  const minutosStr = minutos < 10 ? '0' + minutos : minutos\n  const segundosStr = segundos < 10 ? '0' + segundos : segundos\n\n  return (\n    <p>\n      {`${minutosStr}:${segundosStr}`}<br/>\n      Tempo médio por volta\n    </p>\n  )\n}\n\nconst Button = (props) => <button onClick={props.onClick}>{props.text}</button> \n\nfunction App() {\n\n  const [numVoltas, setNumVoltas] = useState(0)\n  const [running, setRunning] = useState(false)\n  const [tempo, setTempo] = useState(0)\n\n  console.log('toggle')\n\n  useEffect(() => {\n    let timer = null\n    if (running) {\n      setInterval(() => {\n        setTempo(old => old + 1)\n      }, 1000)\n    }\n    return () => { \n        if(timer){ // valor que é convertido para verdadeiro\n          clearInterval(timer)\n        }\n    }\n  }, [running])\n\n\n  const toggleRunning = () => {\n    setRunning(!running)\n  }\n\n  const increment = () => {\n    setNumVoltas(numVoltas + 1)\n  }\n\n  const decrement = () =>{\n    setNumVoltas(numVoltas - 1)\n  }\n\n  const reset = () => {\n    setNumVoltas(0)\n    setTempo(0)\n  }\n\n\n\n  return (\n    <div>\n      <MostraVoltas voltas={numVoltas}/>\n      <Button text='+' onClick={increment}/> \n      <Button text='-' onClick={decrement}/><br /> \n      {\n        numVoltas > 0 &&\n        <MostraTempo tempo={tempo/numVoltas} />\n      }\n      <Button  onClick={toggleRunning} text='Iniciar' />\n      <Button onClick={reset} text='Reiniciar' /><br/>\n      \n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}